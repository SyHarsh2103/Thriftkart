name: Deploy Thriftkart to VPS

on:
  push:
    branches: [main, staging]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_USER: ${{ secrets.SSH_USER }}

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4

      - name: üîê Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: üöÄ Deploy to VPS
        shell: bash
        run: |
          echo "üöß Starting deployment..."
          BRANCH=${GITHUB_REF##*/}
          echo "üîé Detected GitHub branch: $BRANCH"

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            echo 'üîÅ Inside VPS - Preparing environment for branch: $BRANCH'

            if [ \"$BRANCH\" = \"main\" ]; then
              TARGET_DIR=\"/var/www/Thriftkart-production\"
              PM2_NAME=\"Thriftkart-API-production\"
              ADMIN_DIR=\"/var/www/html/Thriftkart-Admin-production\"
            else
              TARGET_DIR=\"/var/www/Thriftkart-$BRANCH\"
              PM2_NAME=\"Thriftkart-API-$BRANCH\"
              ADMIN_DIR=\"/var/www/html/Thriftkart-Admin-$BRANCH\"
            fi

            echo 'üìÅ Navigating to target directory: \$TARGET_DIR'
            cd \$TARGET_DIR || { echo '‚ùå Target directory not found'; exit 1; }

            echo 'üßπ Cleaning local changes'
            git reset --hard HEAD
            git clean -fd

            echo 'üîÑ Pulling latest code from GitHub...'
            git pull origin \$BRANCH

            echo 'üîß Installing server dependencies...'
            cd server
            if [ -f \".env.\$BRANCH\" ]; then
              cp \".env.\$BRANCH\" .env
            else
              echo '‚ö†Ô∏è Warning: .env.\$BRANCH not found, skipping...'
            fi
            npm install
            NODE_ENV=\$BRANCH pm2 restart \$PM2_NAME || NODE_ENV=\$BRANCH pm2 start index.js --name \$PM2_NAME

            echo 'üß± Building Admin Panel...'
            cd ../admin
            npm ci || npm install --legacy-peer-deps
            npx update-browserslist-db@latest --update-db || true
            CI=false npm run build

            echo 'üì§ Deploying Admin build to \$ADMIN_DIR'
            mkdir -p \$ADMIN_DIR
            cp -r build/* \$ADMIN_DIR/

            echo '‚úÖ Deployment completed for branch: \$BRANCH'
          "
